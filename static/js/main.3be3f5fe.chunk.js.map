{"version":3,"sources":["component/ContactList/ContactList.module.scss","component/FormContact/FormContact.module.scss","App.module.scss","component/ContactsFilter/ContactsFilter.module.scss","component/FormContact/FormContact.js","component/ContactsFilter/ContactsFilter.js","component/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FormContact","state","name","number","addFormContact","e","currentTarget","value","setState","dominicToretto","props","contacts","find","SubmitForm","preventDefault","alert","addСontact","className","styles","transparent","htmlFor","uuidv4","onSubmit","this","formInner","onChange","type","pattern","title","required","buttom","Component","Function","defaultProps","ContactsFilter","lable","stateFilter","tupe","ContactList","filteredArrayContact","deleteFormContact","style","list","map","id","listItem","button","onClick","App","filter","contact","prevState","filterValue","toLowerCase","includes","filterContactState","todoId","todo","prevProps","snapshot","contactsData","JSON","stringify","localStorage","setItem","contactsParse","parse","getItem","box","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3be3f5fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1QHHr\",\"listItem\":\"ContactList_listItem__288My\",\"button\":\"ContactList_button__hMGde\",\"name\":\"ContactList_name__1iLzZ\",\"number\":\"ContactList_number__3Pxp3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"FormContact_transparent__1i3uX\",\"formInner\":\"FormContact_formInner__2wA4O\",\"buttom\":\"FormContact_buttom__3eynL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__1s1xz\",\"title\":\"App_title__3OEr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"ContactsFilter_lable__YHgbT\"};","import { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FormContact.module.scss\";\r\n\r\nexport class FormContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  addFormContact = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  dominicToretto = () => {\r\n    return this.props.contacts.find(({ name, number }) => {\r\n      return name === this.state.name || number === this.state.number;\r\n    });\r\n  };\r\n\r\n  SubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.dominicToretto()) {\r\n      return alert(\"the same name or phone number already exists\");\r\n    }\r\n    this.props.addСontact(this.state);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className={styles.transparent}\r\n        htmlFor={uuidv4()}\r\n        onSubmit={this.SubmitForm}\r\n      >\r\n        <div className={styles.formInner}>\r\n          <label>\r\n            Name\r\n            <input\r\n              onChange={this.addFormContact}\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              onChange={this.addFormContact}\r\n              type=\"tel\"\r\n              value={this.state.number}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={styles.buttom} type=\"submit\">\r\n            aad contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormContact.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nFunction.defaultProps = {\r\n  contacts: [],\r\n};\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactsFilter.module.scss\";\r\n\r\nexport class ContactsFilter extends Component {\r\n  render() {\r\n    return (\r\n      <input\r\n        className={styles.lable}\r\n        onChange={this.props.onChange}\r\n        value={this.props.stateFilter}\r\n        tupe=\"text\"\r\n        name=\"filter\"\r\n        title=\"Поиск контактов\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nContactsFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  stateFilter: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./ContactList.module.scss\";\r\n\r\nexport const ContactList = ({ filteredArrayContact, deleteFormContact }) => {\r\n  return (\r\n    <ul className={style.list}>\r\n      {filteredArrayContact().map(({ name, number, id }) => (\r\n        <li className={style.listItem} key={id}>\r\n          <p className={style.name}>\r\n            {name}: <span className={style.number}>{number}</span>\r\n          </p>\r\n          <button\r\n            className={style.button}\r\n            type=\"button\"\r\n            onClick={() => deleteFormContact(id)}\r\n          >\r\n            Удалить\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  deleteFormContact: PropTypes.func.isRequired,\r\n  filteredArrayContact: PropTypes.func.isRequired,\r\n};\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FormContact } from \"./component/FormContact\";\nimport { ContactsFilter } from \"./component/ContactsFilter\";\nimport { ContactList } from \"./component/ContactList\";\nimport styles from \"./App.module.scss\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const contactsData = JSON.stringify(this.state.contacts);\n\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contact\", contactsData);\n    }\n  }\n\n  componentDidMount() {\n    const contactsParse = JSON.parse(localStorage.getItem(\"contact\"));\n    if (contactsParse !== null) {\n      this.setState({ contacts: contactsParse });\n    }\n  }\n\n  addСontact = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  filteredArrayContact = () => {\n    const { filter, contacts } = this.state;\n\n    const filterValue = filter.toLowerCase();\n\n    const filterText = (value) => value.toLowerCase().includes(filterValue);\n\n    return contacts.filter(({ name }) => filterText(name));\n  };\n\n  filterContactState = (e) => {\n    const { value } = e.currentTarget;\n\n    this.setState({ filter: value });\n  };\n\n  deleteFormContact = (todoId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((todo) => todo.id !== todoId),\n    }));\n  };\n\n  render() {\n    return (\n      <div className={styles.box}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <FormContact\n          addСontact={this.addСontact}\n          contacts={this.state.contacts}\n        />\n        <div>\n          <h2 className={styles.title}>contacts</h2>\n          <ContactsFilter\n            onChange={this.filterContactState}\n            stateFilter={this.state.filter}\n          />\n          <ContactList\n            filteredArrayContact={this.filteredArrayContact}\n            key={uuidv4}\n            deleteFormContact={this.deleteFormContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}